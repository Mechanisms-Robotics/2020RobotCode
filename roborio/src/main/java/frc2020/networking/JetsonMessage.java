// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jetson_message.proto

package frc2020.networking;

public final class JetsonMessage {
  private JetsonMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface JetsonUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:frc2020.networking.JetsonUpdate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.frc2020.networking.VisionTargetsUpdate target_updates = 1;</code>
     * @return Whether the targetUpdates field is set.
     */
    boolean hasTargetUpdates();
    /**
     * <code>.frc2020.networking.VisionTargetsUpdate target_updates = 1;</code>
     * @return The targetUpdates.
     */
    frc2020.networking.JetsonMessage.VisionTargetsUpdate getTargetUpdates();
    /**
     * <code>.frc2020.networking.VisionTargetsUpdate target_updates = 1;</code>
     */
    frc2020.networking.JetsonMessage.VisionTargetsUpdateOrBuilder getTargetUpdatesOrBuilder();

    /**
     * <code>.frc2020.networking.SLAMPose slam_update = 2;</code>
     * @return Whether the slamUpdate field is set.
     */
    boolean hasSlamUpdate();
    /**
     * <code>.frc2020.networking.SLAMPose slam_update = 2;</code>
     * @return The slamUpdate.
     */
    frc2020.networking.JetsonMessage.SLAMPose getSlamUpdate();
    /**
     * <code>.frc2020.networking.SLAMPose slam_update = 2;</code>
     */
    frc2020.networking.JetsonMessage.SLAMPoseOrBuilder getSlamUpdateOrBuilder();

    /**
     * <code>.frc2020.networking.DriveSignal drive_signal = 3;</code>
     * @return Whether the driveSignal field is set.
     */
    boolean hasDriveSignal();
    /**
     * <code>.frc2020.networking.DriveSignal drive_signal = 3;</code>
     * @return The driveSignal.
     */
    frc2020.networking.JetsonMessage.DriveSignal getDriveSignal();
    /**
     * <code>.frc2020.networking.DriveSignal drive_signal = 3;</code>
     */
    frc2020.networking.JetsonMessage.DriveSignalOrBuilder getDriveSignalOrBuilder();
  }
  /**
   * Protobuf type {@code frc2020.networking.JetsonUpdate}
   */
  public  static final class JetsonUpdate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:frc2020.networking.JetsonUpdate)
      JetsonUpdateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use JetsonUpdate.newBuilder() to construct.
    private JetsonUpdate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private JetsonUpdate() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new JetsonUpdate();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private JetsonUpdate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              frc2020.networking.JetsonMessage.VisionTargetsUpdate.Builder subBuilder = null;
              if (targetUpdates_ != null) {
                subBuilder = targetUpdates_.toBuilder();
              }
              targetUpdates_ = input.readMessage(frc2020.networking.JetsonMessage.VisionTargetsUpdate.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(targetUpdates_);
                targetUpdates_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              frc2020.networking.JetsonMessage.SLAMPose.Builder subBuilder = null;
              if (slamUpdate_ != null) {
                subBuilder = slamUpdate_.toBuilder();
              }
              slamUpdate_ = input.readMessage(frc2020.networking.JetsonMessage.SLAMPose.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(slamUpdate_);
                slamUpdate_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              frc2020.networking.JetsonMessage.DriveSignal.Builder subBuilder = null;
              if (driveSignal_ != null) {
                subBuilder = driveSignal_.toBuilder();
              }
              driveSignal_ = input.readMessage(frc2020.networking.JetsonMessage.DriveSignal.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(driveSignal_);
                driveSignal_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_JetsonUpdate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_JetsonUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              frc2020.networking.JetsonMessage.JetsonUpdate.class, frc2020.networking.JetsonMessage.JetsonUpdate.Builder.class);
    }

    public static final int TARGET_UPDATES_FIELD_NUMBER = 1;
    private frc2020.networking.JetsonMessage.VisionTargetsUpdate targetUpdates_;
    /**
     * <code>.frc2020.networking.VisionTargetsUpdate target_updates = 1;</code>
     * @return Whether the targetUpdates field is set.
     */
    public boolean hasTargetUpdates() {
      return targetUpdates_ != null;
    }
    /**
     * <code>.frc2020.networking.VisionTargetsUpdate target_updates = 1;</code>
     * @return The targetUpdates.
     */
    public frc2020.networking.JetsonMessage.VisionTargetsUpdate getTargetUpdates() {
      return targetUpdates_ == null ? frc2020.networking.JetsonMessage.VisionTargetsUpdate.getDefaultInstance() : targetUpdates_;
    }
    /**
     * <code>.frc2020.networking.VisionTargetsUpdate target_updates = 1;</code>
     */
    public frc2020.networking.JetsonMessage.VisionTargetsUpdateOrBuilder getTargetUpdatesOrBuilder() {
      return getTargetUpdates();
    }

    public static final int SLAM_UPDATE_FIELD_NUMBER = 2;
    private frc2020.networking.JetsonMessage.SLAMPose slamUpdate_;
    /**
     * <code>.frc2020.networking.SLAMPose slam_update = 2;</code>
     * @return Whether the slamUpdate field is set.
     */
    public boolean hasSlamUpdate() {
      return slamUpdate_ != null;
    }
    /**
     * <code>.frc2020.networking.SLAMPose slam_update = 2;</code>
     * @return The slamUpdate.
     */
    public frc2020.networking.JetsonMessage.SLAMPose getSlamUpdate() {
      return slamUpdate_ == null ? frc2020.networking.JetsonMessage.SLAMPose.getDefaultInstance() : slamUpdate_;
    }
    /**
     * <code>.frc2020.networking.SLAMPose slam_update = 2;</code>
     */
    public frc2020.networking.JetsonMessage.SLAMPoseOrBuilder getSlamUpdateOrBuilder() {
      return getSlamUpdate();
    }

    public static final int DRIVE_SIGNAL_FIELD_NUMBER = 3;
    private frc2020.networking.JetsonMessage.DriveSignal driveSignal_;
    /**
     * <code>.frc2020.networking.DriveSignal drive_signal = 3;</code>
     * @return Whether the driveSignal field is set.
     */
    public boolean hasDriveSignal() {
      return driveSignal_ != null;
    }
    /**
     * <code>.frc2020.networking.DriveSignal drive_signal = 3;</code>
     * @return The driveSignal.
     */
    public frc2020.networking.JetsonMessage.DriveSignal getDriveSignal() {
      return driveSignal_ == null ? frc2020.networking.JetsonMessage.DriveSignal.getDefaultInstance() : driveSignal_;
    }
    /**
     * <code>.frc2020.networking.DriveSignal drive_signal = 3;</code>
     */
    public frc2020.networking.JetsonMessage.DriveSignalOrBuilder getDriveSignalOrBuilder() {
      return getDriveSignal();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (targetUpdates_ != null) {
        output.writeMessage(1, getTargetUpdates());
      }
      if (slamUpdate_ != null) {
        output.writeMessage(2, getSlamUpdate());
      }
      if (driveSignal_ != null) {
        output.writeMessage(3, getDriveSignal());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (targetUpdates_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTargetUpdates());
      }
      if (slamUpdate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSlamUpdate());
      }
      if (driveSignal_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDriveSignal());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof frc2020.networking.JetsonMessage.JetsonUpdate)) {
        return super.equals(obj);
      }
      frc2020.networking.JetsonMessage.JetsonUpdate other = (frc2020.networking.JetsonMessage.JetsonUpdate) obj;

      if (hasTargetUpdates() != other.hasTargetUpdates()) return false;
      if (hasTargetUpdates()) {
        if (!getTargetUpdates()
            .equals(other.getTargetUpdates())) return false;
      }
      if (hasSlamUpdate() != other.hasSlamUpdate()) return false;
      if (hasSlamUpdate()) {
        if (!getSlamUpdate()
            .equals(other.getSlamUpdate())) return false;
      }
      if (hasDriveSignal() != other.hasDriveSignal()) return false;
      if (hasDriveSignal()) {
        if (!getDriveSignal()
            .equals(other.getDriveSignal())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTargetUpdates()) {
        hash = (37 * hash) + TARGET_UPDATES_FIELD_NUMBER;
        hash = (53 * hash) + getTargetUpdates().hashCode();
      }
      if (hasSlamUpdate()) {
        hash = (37 * hash) + SLAM_UPDATE_FIELD_NUMBER;
        hash = (53 * hash) + getSlamUpdate().hashCode();
      }
      if (hasDriveSignal()) {
        hash = (37 * hash) + DRIVE_SIGNAL_FIELD_NUMBER;
        hash = (53 * hash) + getDriveSignal().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static frc2020.networking.JetsonMessage.JetsonUpdate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static frc2020.networking.JetsonMessage.JetsonUpdate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static frc2020.networking.JetsonMessage.JetsonUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static frc2020.networking.JetsonMessage.JetsonUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static frc2020.networking.JetsonMessage.JetsonUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static frc2020.networking.JetsonMessage.JetsonUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static frc2020.networking.JetsonMessage.JetsonUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static frc2020.networking.JetsonMessage.JetsonUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static frc2020.networking.JetsonMessage.JetsonUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static frc2020.networking.JetsonMessage.JetsonUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static frc2020.networking.JetsonMessage.JetsonUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static frc2020.networking.JetsonMessage.JetsonUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(frc2020.networking.JetsonMessage.JetsonUpdate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code frc2020.networking.JetsonUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:frc2020.networking.JetsonUpdate)
        frc2020.networking.JetsonMessage.JetsonUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_JetsonUpdate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_JetsonUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                frc2020.networking.JetsonMessage.JetsonUpdate.class, frc2020.networking.JetsonMessage.JetsonUpdate.Builder.class);
      }

      // Construct using frc2020.networking.JetsonMessage.JetsonUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (targetUpdatesBuilder_ == null) {
          targetUpdates_ = null;
        } else {
          targetUpdates_ = null;
          targetUpdatesBuilder_ = null;
        }
        if (slamUpdateBuilder_ == null) {
          slamUpdate_ = null;
        } else {
          slamUpdate_ = null;
          slamUpdateBuilder_ = null;
        }
        if (driveSignalBuilder_ == null) {
          driveSignal_ = null;
        } else {
          driveSignal_ = null;
          driveSignalBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_JetsonUpdate_descriptor;
      }

      @java.lang.Override
      public frc2020.networking.JetsonMessage.JetsonUpdate getDefaultInstanceForType() {
        return frc2020.networking.JetsonMessage.JetsonUpdate.getDefaultInstance();
      }

      @java.lang.Override
      public frc2020.networking.JetsonMessage.JetsonUpdate build() {
        frc2020.networking.JetsonMessage.JetsonUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public frc2020.networking.JetsonMessage.JetsonUpdate buildPartial() {
        frc2020.networking.JetsonMessage.JetsonUpdate result = new frc2020.networking.JetsonMessage.JetsonUpdate(this);
        if (targetUpdatesBuilder_ == null) {
          result.targetUpdates_ = targetUpdates_;
        } else {
          result.targetUpdates_ = targetUpdatesBuilder_.build();
        }
        if (slamUpdateBuilder_ == null) {
          result.slamUpdate_ = slamUpdate_;
        } else {
          result.slamUpdate_ = slamUpdateBuilder_.build();
        }
        if (driveSignalBuilder_ == null) {
          result.driveSignal_ = driveSignal_;
        } else {
          result.driveSignal_ = driveSignalBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof frc2020.networking.JetsonMessage.JetsonUpdate) {
          return mergeFrom((frc2020.networking.JetsonMessage.JetsonUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(frc2020.networking.JetsonMessage.JetsonUpdate other) {
        if (other == frc2020.networking.JetsonMessage.JetsonUpdate.getDefaultInstance()) return this;
        if (other.hasTargetUpdates()) {
          mergeTargetUpdates(other.getTargetUpdates());
        }
        if (other.hasSlamUpdate()) {
          mergeSlamUpdate(other.getSlamUpdate());
        }
        if (other.hasDriveSignal()) {
          mergeDriveSignal(other.getDriveSignal());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        frc2020.networking.JetsonMessage.JetsonUpdate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (frc2020.networking.JetsonMessage.JetsonUpdate) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private frc2020.networking.JetsonMessage.VisionTargetsUpdate targetUpdates_;
      private com.google.protobuf.SingleFieldBuilderV3<
          frc2020.networking.JetsonMessage.VisionTargetsUpdate, frc2020.networking.JetsonMessage.VisionTargetsUpdate.Builder, frc2020.networking.JetsonMessage.VisionTargetsUpdateOrBuilder> targetUpdatesBuilder_;
      /**
       * <code>.frc2020.networking.VisionTargetsUpdate target_updates = 1;</code>
       * @return Whether the targetUpdates field is set.
       */
      public boolean hasTargetUpdates() {
        return targetUpdatesBuilder_ != null || targetUpdates_ != null;
      }
      /**
       * <code>.frc2020.networking.VisionTargetsUpdate target_updates = 1;</code>
       * @return The targetUpdates.
       */
      public frc2020.networking.JetsonMessage.VisionTargetsUpdate getTargetUpdates() {
        if (targetUpdatesBuilder_ == null) {
          return targetUpdates_ == null ? frc2020.networking.JetsonMessage.VisionTargetsUpdate.getDefaultInstance() : targetUpdates_;
        } else {
          return targetUpdatesBuilder_.getMessage();
        }
      }
      /**
       * <code>.frc2020.networking.VisionTargetsUpdate target_updates = 1;</code>
       */
      public Builder setTargetUpdates(frc2020.networking.JetsonMessage.VisionTargetsUpdate value) {
        if (targetUpdatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          targetUpdates_ = value;
          onChanged();
        } else {
          targetUpdatesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.frc2020.networking.VisionTargetsUpdate target_updates = 1;</code>
       */
      public Builder setTargetUpdates(
          frc2020.networking.JetsonMessage.VisionTargetsUpdate.Builder builderForValue) {
        if (targetUpdatesBuilder_ == null) {
          targetUpdates_ = builderForValue.build();
          onChanged();
        } else {
          targetUpdatesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.frc2020.networking.VisionTargetsUpdate target_updates = 1;</code>
       */
      public Builder mergeTargetUpdates(frc2020.networking.JetsonMessage.VisionTargetsUpdate value) {
        if (targetUpdatesBuilder_ == null) {
          if (targetUpdates_ != null) {
            targetUpdates_ =
              frc2020.networking.JetsonMessage.VisionTargetsUpdate.newBuilder(targetUpdates_).mergeFrom(value).buildPartial();
          } else {
            targetUpdates_ = value;
          }
          onChanged();
        } else {
          targetUpdatesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.frc2020.networking.VisionTargetsUpdate target_updates = 1;</code>
       */
      public Builder clearTargetUpdates() {
        if (targetUpdatesBuilder_ == null) {
          targetUpdates_ = null;
          onChanged();
        } else {
          targetUpdates_ = null;
          targetUpdatesBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.frc2020.networking.VisionTargetsUpdate target_updates = 1;</code>
       */
      public frc2020.networking.JetsonMessage.VisionTargetsUpdate.Builder getTargetUpdatesBuilder() {
        
        onChanged();
        return getTargetUpdatesFieldBuilder().getBuilder();
      }
      /**
       * <code>.frc2020.networking.VisionTargetsUpdate target_updates = 1;</code>
       */
      public frc2020.networking.JetsonMessage.VisionTargetsUpdateOrBuilder getTargetUpdatesOrBuilder() {
        if (targetUpdatesBuilder_ != null) {
          return targetUpdatesBuilder_.getMessageOrBuilder();
        } else {
          return targetUpdates_ == null ?
              frc2020.networking.JetsonMessage.VisionTargetsUpdate.getDefaultInstance() : targetUpdates_;
        }
      }
      /**
       * <code>.frc2020.networking.VisionTargetsUpdate target_updates = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          frc2020.networking.JetsonMessage.VisionTargetsUpdate, frc2020.networking.JetsonMessage.VisionTargetsUpdate.Builder, frc2020.networking.JetsonMessage.VisionTargetsUpdateOrBuilder> 
          getTargetUpdatesFieldBuilder() {
        if (targetUpdatesBuilder_ == null) {
          targetUpdatesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              frc2020.networking.JetsonMessage.VisionTargetsUpdate, frc2020.networking.JetsonMessage.VisionTargetsUpdate.Builder, frc2020.networking.JetsonMessage.VisionTargetsUpdateOrBuilder>(
                  getTargetUpdates(),
                  getParentForChildren(),
                  isClean());
          targetUpdates_ = null;
        }
        return targetUpdatesBuilder_;
      }

      private frc2020.networking.JetsonMessage.SLAMPose slamUpdate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          frc2020.networking.JetsonMessage.SLAMPose, frc2020.networking.JetsonMessage.SLAMPose.Builder, frc2020.networking.JetsonMessage.SLAMPoseOrBuilder> slamUpdateBuilder_;
      /**
       * <code>.frc2020.networking.SLAMPose slam_update = 2;</code>
       * @return Whether the slamUpdate field is set.
       */
      public boolean hasSlamUpdate() {
        return slamUpdateBuilder_ != null || slamUpdate_ != null;
      }
      /**
       * <code>.frc2020.networking.SLAMPose slam_update = 2;</code>
       * @return The slamUpdate.
       */
      public frc2020.networking.JetsonMessage.SLAMPose getSlamUpdate() {
        if (slamUpdateBuilder_ == null) {
          return slamUpdate_ == null ? frc2020.networking.JetsonMessage.SLAMPose.getDefaultInstance() : slamUpdate_;
        } else {
          return slamUpdateBuilder_.getMessage();
        }
      }
      /**
       * <code>.frc2020.networking.SLAMPose slam_update = 2;</code>
       */
      public Builder setSlamUpdate(frc2020.networking.JetsonMessage.SLAMPose value) {
        if (slamUpdateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          slamUpdate_ = value;
          onChanged();
        } else {
          slamUpdateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.frc2020.networking.SLAMPose slam_update = 2;</code>
       */
      public Builder setSlamUpdate(
          frc2020.networking.JetsonMessage.SLAMPose.Builder builderForValue) {
        if (slamUpdateBuilder_ == null) {
          slamUpdate_ = builderForValue.build();
          onChanged();
        } else {
          slamUpdateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.frc2020.networking.SLAMPose slam_update = 2;</code>
       */
      public Builder mergeSlamUpdate(frc2020.networking.JetsonMessage.SLAMPose value) {
        if (slamUpdateBuilder_ == null) {
          if (slamUpdate_ != null) {
            slamUpdate_ =
              frc2020.networking.JetsonMessage.SLAMPose.newBuilder(slamUpdate_).mergeFrom(value).buildPartial();
          } else {
            slamUpdate_ = value;
          }
          onChanged();
        } else {
          slamUpdateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.frc2020.networking.SLAMPose slam_update = 2;</code>
       */
      public Builder clearSlamUpdate() {
        if (slamUpdateBuilder_ == null) {
          slamUpdate_ = null;
          onChanged();
        } else {
          slamUpdate_ = null;
          slamUpdateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.frc2020.networking.SLAMPose slam_update = 2;</code>
       */
      public frc2020.networking.JetsonMessage.SLAMPose.Builder getSlamUpdateBuilder() {
        
        onChanged();
        return getSlamUpdateFieldBuilder().getBuilder();
      }
      /**
       * <code>.frc2020.networking.SLAMPose slam_update = 2;</code>
       */
      public frc2020.networking.JetsonMessage.SLAMPoseOrBuilder getSlamUpdateOrBuilder() {
        if (slamUpdateBuilder_ != null) {
          return slamUpdateBuilder_.getMessageOrBuilder();
        } else {
          return slamUpdate_ == null ?
              frc2020.networking.JetsonMessage.SLAMPose.getDefaultInstance() : slamUpdate_;
        }
      }
      /**
       * <code>.frc2020.networking.SLAMPose slam_update = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          frc2020.networking.JetsonMessage.SLAMPose, frc2020.networking.JetsonMessage.SLAMPose.Builder, frc2020.networking.JetsonMessage.SLAMPoseOrBuilder> 
          getSlamUpdateFieldBuilder() {
        if (slamUpdateBuilder_ == null) {
          slamUpdateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              frc2020.networking.JetsonMessage.SLAMPose, frc2020.networking.JetsonMessage.SLAMPose.Builder, frc2020.networking.JetsonMessage.SLAMPoseOrBuilder>(
                  getSlamUpdate(),
                  getParentForChildren(),
                  isClean());
          slamUpdate_ = null;
        }
        return slamUpdateBuilder_;
      }

      private frc2020.networking.JetsonMessage.DriveSignal driveSignal_;
      private com.google.protobuf.SingleFieldBuilderV3<
          frc2020.networking.JetsonMessage.DriveSignal, frc2020.networking.JetsonMessage.DriveSignal.Builder, frc2020.networking.JetsonMessage.DriveSignalOrBuilder> driveSignalBuilder_;
      /**
       * <code>.frc2020.networking.DriveSignal drive_signal = 3;</code>
       * @return Whether the driveSignal field is set.
       */
      public boolean hasDriveSignal() {
        return driveSignalBuilder_ != null || driveSignal_ != null;
      }
      /**
       * <code>.frc2020.networking.DriveSignal drive_signal = 3;</code>
       * @return The driveSignal.
       */
      public frc2020.networking.JetsonMessage.DriveSignal getDriveSignal() {
        if (driveSignalBuilder_ == null) {
          return driveSignal_ == null ? frc2020.networking.JetsonMessage.DriveSignal.getDefaultInstance() : driveSignal_;
        } else {
          return driveSignalBuilder_.getMessage();
        }
      }
      /**
       * <code>.frc2020.networking.DriveSignal drive_signal = 3;</code>
       */
      public Builder setDriveSignal(frc2020.networking.JetsonMessage.DriveSignal value) {
        if (driveSignalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          driveSignal_ = value;
          onChanged();
        } else {
          driveSignalBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.frc2020.networking.DriveSignal drive_signal = 3;</code>
       */
      public Builder setDriveSignal(
          frc2020.networking.JetsonMessage.DriveSignal.Builder builderForValue) {
        if (driveSignalBuilder_ == null) {
          driveSignal_ = builderForValue.build();
          onChanged();
        } else {
          driveSignalBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.frc2020.networking.DriveSignal drive_signal = 3;</code>
       */
      public Builder mergeDriveSignal(frc2020.networking.JetsonMessage.DriveSignal value) {
        if (driveSignalBuilder_ == null) {
          if (driveSignal_ != null) {
            driveSignal_ =
              frc2020.networking.JetsonMessage.DriveSignal.newBuilder(driveSignal_).mergeFrom(value).buildPartial();
          } else {
            driveSignal_ = value;
          }
          onChanged();
        } else {
          driveSignalBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.frc2020.networking.DriveSignal drive_signal = 3;</code>
       */
      public Builder clearDriveSignal() {
        if (driveSignalBuilder_ == null) {
          driveSignal_ = null;
          onChanged();
        } else {
          driveSignal_ = null;
          driveSignalBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.frc2020.networking.DriveSignal drive_signal = 3;</code>
       */
      public frc2020.networking.JetsonMessage.DriveSignal.Builder getDriveSignalBuilder() {
        
        onChanged();
        return getDriveSignalFieldBuilder().getBuilder();
      }
      /**
       * <code>.frc2020.networking.DriveSignal drive_signal = 3;</code>
       */
      public frc2020.networking.JetsonMessage.DriveSignalOrBuilder getDriveSignalOrBuilder() {
        if (driveSignalBuilder_ != null) {
          return driveSignalBuilder_.getMessageOrBuilder();
        } else {
          return driveSignal_ == null ?
              frc2020.networking.JetsonMessage.DriveSignal.getDefaultInstance() : driveSignal_;
        }
      }
      /**
       * <code>.frc2020.networking.DriveSignal drive_signal = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          frc2020.networking.JetsonMessage.DriveSignal, frc2020.networking.JetsonMessage.DriveSignal.Builder, frc2020.networking.JetsonMessage.DriveSignalOrBuilder> 
          getDriveSignalFieldBuilder() {
        if (driveSignalBuilder_ == null) {
          driveSignalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              frc2020.networking.JetsonMessage.DriveSignal, frc2020.networking.JetsonMessage.DriveSignal.Builder, frc2020.networking.JetsonMessage.DriveSignalOrBuilder>(
                  getDriveSignal(),
                  getParentForChildren(),
                  isClean());
          driveSignal_ = null;
        }
        return driveSignalBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:frc2020.networking.JetsonUpdate)
    }

    // @@protoc_insertion_point(class_scope:frc2020.networking.JetsonUpdate)
    private static final frc2020.networking.JetsonMessage.JetsonUpdate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new frc2020.networking.JetsonMessage.JetsonUpdate();
    }

    public static frc2020.networking.JetsonMessage.JetsonUpdate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<JetsonUpdate>
        PARSER = new com.google.protobuf.AbstractParser<JetsonUpdate>() {
      @java.lang.Override
      public JetsonUpdate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JetsonUpdate(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<JetsonUpdate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<JetsonUpdate> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public frc2020.networking.JetsonMessage.JetsonUpdate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VisionTargetsUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:frc2020.networking.VisionTargetsUpdate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
     */
    java.util.List<frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget> 
        getTargetsList();
    /**
     * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
     */
    frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget getTargets(int index);
    /**
     * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
     */
    int getTargetsCount();
    /**
     * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
     */
    java.util.List<? extends frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTargetOrBuilder> 
        getTargetsOrBuilderList();
    /**
     * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
     */
    frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTargetOrBuilder getTargetsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code frc2020.networking.VisionTargetsUpdate}
   */
  public  static final class VisionTargetsUpdate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:frc2020.networking.VisionTargetsUpdate)
      VisionTargetsUpdateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VisionTargetsUpdate.newBuilder() to construct.
    private VisionTargetsUpdate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VisionTargetsUpdate() {
      targets_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new VisionTargetsUpdate();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VisionTargetsUpdate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                targets_ = new java.util.ArrayList<frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget>();
                mutable_bitField0_ |= 0x00000001;
              }
              targets_.add(
                  input.readMessage(frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          targets_ = java.util.Collections.unmodifiableList(targets_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_VisionTargetsUpdate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_VisionTargetsUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              frc2020.networking.JetsonMessage.VisionTargetsUpdate.class, frc2020.networking.JetsonMessage.VisionTargetsUpdate.Builder.class);
    }

    public interface VisionTargetOrBuilder extends
        // @@protoc_insertion_point(interface_extends:frc2020.networking.VisionTargetsUpdate.VisionTarget)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>float frame_epoc = 1;</code>
       * @return The frameEpoc.
       */
      float getFrameEpoc();

      /**
       * <code>float x = 2;</code>
       * @return The x.
       */
      float getX();

      /**
       * <code>float y = 3;</code>
       * @return The y.
       */
      float getY();

      /**
       * <code>float theta = 4;</code>
       * @return The theta.
       */
      float getTheta();
    }
    /**
     * Protobuf type {@code frc2020.networking.VisionTargetsUpdate.VisionTarget}
     */
    public  static final class VisionTarget extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:frc2020.networking.VisionTargetsUpdate.VisionTarget)
        VisionTargetOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use VisionTarget.newBuilder() to construct.
      private VisionTarget(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private VisionTarget() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new VisionTarget();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private VisionTarget(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {

                frameEpoc_ = input.readFloat();
                break;
              }
              case 21: {

                x_ = input.readFloat();
                break;
              }
              case 29: {

                y_ = input.readFloat();
                break;
              }
              case 37: {

                theta_ = input.readFloat();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_VisionTargetsUpdate_VisionTarget_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_VisionTargetsUpdate_VisionTarget_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget.class, frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget.Builder.class);
      }

      public static final int FRAME_EPOC_FIELD_NUMBER = 1;
      private float frameEpoc_;
      /**
       * <code>float frame_epoc = 1;</code>
       * @return The frameEpoc.
       */
      public float getFrameEpoc() {
        return frameEpoc_;
      }

      public static final int X_FIELD_NUMBER = 2;
      private float x_;
      /**
       * <code>float x = 2;</code>
       * @return The x.
       */
      public float getX() {
        return x_;
      }

      public static final int Y_FIELD_NUMBER = 3;
      private float y_;
      /**
       * <code>float y = 3;</code>
       * @return The y.
       */
      public float getY() {
        return y_;
      }

      public static final int THETA_FIELD_NUMBER = 4;
      private float theta_;
      /**
       * <code>float theta = 4;</code>
       * @return The theta.
       */
      public float getTheta() {
        return theta_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (frameEpoc_ != 0F) {
          output.writeFloat(1, frameEpoc_);
        }
        if (x_ != 0F) {
          output.writeFloat(2, x_);
        }
        if (y_ != 0F) {
          output.writeFloat(3, y_);
        }
        if (theta_ != 0F) {
          output.writeFloat(4, theta_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (frameEpoc_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, frameEpoc_);
        }
        if (x_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, x_);
        }
        if (y_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, y_);
        }
        if (theta_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, theta_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget)) {
          return super.equals(obj);
        }
        frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget other = (frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget) obj;

        if (java.lang.Float.floatToIntBits(getFrameEpoc())
            != java.lang.Float.floatToIntBits(
                other.getFrameEpoc())) return false;
        if (java.lang.Float.floatToIntBits(getX())
            != java.lang.Float.floatToIntBits(
                other.getX())) return false;
        if (java.lang.Float.floatToIntBits(getY())
            != java.lang.Float.floatToIntBits(
                other.getY())) return false;
        if (java.lang.Float.floatToIntBits(getTheta())
            != java.lang.Float.floatToIntBits(
                other.getTheta())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + FRAME_EPOC_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getFrameEpoc());
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getX());
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getY());
        hash = (37 * hash) + THETA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTheta());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code frc2020.networking.VisionTargetsUpdate.VisionTarget}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:frc2020.networking.VisionTargetsUpdate.VisionTarget)
          frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTargetOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_VisionTargetsUpdate_VisionTarget_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_VisionTargetsUpdate_VisionTarget_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget.class, frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget.Builder.class);
        }

        // Construct using frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          frameEpoc_ = 0F;

          x_ = 0F;

          y_ = 0F;

          theta_ = 0F;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_VisionTargetsUpdate_VisionTarget_descriptor;
        }

        @java.lang.Override
        public frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget getDefaultInstanceForType() {
          return frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget.getDefaultInstance();
        }

        @java.lang.Override
        public frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget build() {
          frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget buildPartial() {
          frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget result = new frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget(this);
          result.frameEpoc_ = frameEpoc_;
          result.x_ = x_;
          result.y_ = y_;
          result.theta_ = theta_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget) {
            return mergeFrom((frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget other) {
          if (other == frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget.getDefaultInstance()) return this;
          if (other.getFrameEpoc() != 0F) {
            setFrameEpoc(other.getFrameEpoc());
          }
          if (other.getX() != 0F) {
            setX(other.getX());
          }
          if (other.getY() != 0F) {
            setY(other.getY());
          }
          if (other.getTheta() != 0F) {
            setTheta(other.getTheta());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private float frameEpoc_ ;
        /**
         * <code>float frame_epoc = 1;</code>
         * @return The frameEpoc.
         */
        public float getFrameEpoc() {
          return frameEpoc_;
        }
        /**
         * <code>float frame_epoc = 1;</code>
         * @param value The frameEpoc to set.
         * @return This builder for chaining.
         */
        public Builder setFrameEpoc(float value) {
          
          frameEpoc_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>float frame_epoc = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearFrameEpoc() {
          
          frameEpoc_ = 0F;
          onChanged();
          return this;
        }

        private float x_ ;
        /**
         * <code>float x = 2;</code>
         * @return The x.
         */
        public float getX() {
          return x_;
        }
        /**
         * <code>float x = 2;</code>
         * @param value The x to set.
         * @return This builder for chaining.
         */
        public Builder setX(float value) {
          
          x_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>float x = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearX() {
          
          x_ = 0F;
          onChanged();
          return this;
        }

        private float y_ ;
        /**
         * <code>float y = 3;</code>
         * @return The y.
         */
        public float getY() {
          return y_;
        }
        /**
         * <code>float y = 3;</code>
         * @param value The y to set.
         * @return This builder for chaining.
         */
        public Builder setY(float value) {
          
          y_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>float y = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearY() {
          
          y_ = 0F;
          onChanged();
          return this;
        }

        private float theta_ ;
        /**
         * <code>float theta = 4;</code>
         * @return The theta.
         */
        public float getTheta() {
          return theta_;
        }
        /**
         * <code>float theta = 4;</code>
         * @param value The theta to set.
         * @return This builder for chaining.
         */
        public Builder setTheta(float value) {
          
          theta_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>float theta = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearTheta() {
          
          theta_ = 0F;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:frc2020.networking.VisionTargetsUpdate.VisionTarget)
      }

      // @@protoc_insertion_point(class_scope:frc2020.networking.VisionTargetsUpdate.VisionTarget)
      private static final frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget();
      }

      public static frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<VisionTarget>
          PARSER = new com.google.protobuf.AbstractParser<VisionTarget>() {
        @java.lang.Override
        public VisionTarget parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new VisionTarget(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<VisionTarget> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<VisionTarget> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int TARGETS_FIELD_NUMBER = 1;
    private java.util.List<frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget> targets_;
    /**
     * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
     */
    public java.util.List<frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget> getTargetsList() {
      return targets_;
    }
    /**
     * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
     */
    public java.util.List<? extends frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTargetOrBuilder> 
        getTargetsOrBuilderList() {
      return targets_;
    }
    /**
     * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
     */
    public int getTargetsCount() {
      return targets_.size();
    }
    /**
     * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
     */
    public frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget getTargets(int index) {
      return targets_.get(index);
    }
    /**
     * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
     */
    public frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTargetOrBuilder getTargetsOrBuilder(
        int index) {
      return targets_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < targets_.size(); i++) {
        output.writeMessage(1, targets_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < targets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, targets_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof frc2020.networking.JetsonMessage.VisionTargetsUpdate)) {
        return super.equals(obj);
      }
      frc2020.networking.JetsonMessage.VisionTargetsUpdate other = (frc2020.networking.JetsonMessage.VisionTargetsUpdate) obj;

      if (!getTargetsList()
          .equals(other.getTargetsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTargetsCount() > 0) {
        hash = (37 * hash) + TARGETS_FIELD_NUMBER;
        hash = (53 * hash) + getTargetsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static frc2020.networking.JetsonMessage.VisionTargetsUpdate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static frc2020.networking.JetsonMessage.VisionTargetsUpdate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static frc2020.networking.JetsonMessage.VisionTargetsUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static frc2020.networking.JetsonMessage.VisionTargetsUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static frc2020.networking.JetsonMessage.VisionTargetsUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static frc2020.networking.JetsonMessage.VisionTargetsUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static frc2020.networking.JetsonMessage.VisionTargetsUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static frc2020.networking.JetsonMessage.VisionTargetsUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static frc2020.networking.JetsonMessage.VisionTargetsUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static frc2020.networking.JetsonMessage.VisionTargetsUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static frc2020.networking.JetsonMessage.VisionTargetsUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static frc2020.networking.JetsonMessage.VisionTargetsUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(frc2020.networking.JetsonMessage.VisionTargetsUpdate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code frc2020.networking.VisionTargetsUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:frc2020.networking.VisionTargetsUpdate)
        frc2020.networking.JetsonMessage.VisionTargetsUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_VisionTargetsUpdate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_VisionTargetsUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                frc2020.networking.JetsonMessage.VisionTargetsUpdate.class, frc2020.networking.JetsonMessage.VisionTargetsUpdate.Builder.class);
      }

      // Construct using frc2020.networking.JetsonMessage.VisionTargetsUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTargetsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (targetsBuilder_ == null) {
          targets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          targetsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_VisionTargetsUpdate_descriptor;
      }

      @java.lang.Override
      public frc2020.networking.JetsonMessage.VisionTargetsUpdate getDefaultInstanceForType() {
        return frc2020.networking.JetsonMessage.VisionTargetsUpdate.getDefaultInstance();
      }

      @java.lang.Override
      public frc2020.networking.JetsonMessage.VisionTargetsUpdate build() {
        frc2020.networking.JetsonMessage.VisionTargetsUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public frc2020.networking.JetsonMessage.VisionTargetsUpdate buildPartial() {
        frc2020.networking.JetsonMessage.VisionTargetsUpdate result = new frc2020.networking.JetsonMessage.VisionTargetsUpdate(this);
        int from_bitField0_ = bitField0_;
        if (targetsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            targets_ = java.util.Collections.unmodifiableList(targets_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.targets_ = targets_;
        } else {
          result.targets_ = targetsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof frc2020.networking.JetsonMessage.VisionTargetsUpdate) {
          return mergeFrom((frc2020.networking.JetsonMessage.VisionTargetsUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(frc2020.networking.JetsonMessage.VisionTargetsUpdate other) {
        if (other == frc2020.networking.JetsonMessage.VisionTargetsUpdate.getDefaultInstance()) return this;
        if (targetsBuilder_ == null) {
          if (!other.targets_.isEmpty()) {
            if (targets_.isEmpty()) {
              targets_ = other.targets_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTargetsIsMutable();
              targets_.addAll(other.targets_);
            }
            onChanged();
          }
        } else {
          if (!other.targets_.isEmpty()) {
            if (targetsBuilder_.isEmpty()) {
              targetsBuilder_.dispose();
              targetsBuilder_ = null;
              targets_ = other.targets_;
              bitField0_ = (bitField0_ & ~0x00000001);
              targetsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTargetsFieldBuilder() : null;
            } else {
              targetsBuilder_.addAllMessages(other.targets_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        frc2020.networking.JetsonMessage.VisionTargetsUpdate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (frc2020.networking.JetsonMessage.VisionTargetsUpdate) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget> targets_ =
        java.util.Collections.emptyList();
      private void ensureTargetsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          targets_ = new java.util.ArrayList<frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget>(targets_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget, frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget.Builder, frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTargetOrBuilder> targetsBuilder_;

      /**
       * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
       */
      public java.util.List<frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget> getTargetsList() {
        if (targetsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(targets_);
        } else {
          return targetsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
       */
      public int getTargetsCount() {
        if (targetsBuilder_ == null) {
          return targets_.size();
        } else {
          return targetsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
       */
      public frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget getTargets(int index) {
        if (targetsBuilder_ == null) {
          return targets_.get(index);
        } else {
          return targetsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
       */
      public Builder setTargets(
          int index, frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget value) {
        if (targetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetsIsMutable();
          targets_.set(index, value);
          onChanged();
        } else {
          targetsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
       */
      public Builder setTargets(
          int index, frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget.Builder builderForValue) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.set(index, builderForValue.build());
          onChanged();
        } else {
          targetsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
       */
      public Builder addTargets(frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget value) {
        if (targetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetsIsMutable();
          targets_.add(value);
          onChanged();
        } else {
          targetsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
       */
      public Builder addTargets(
          int index, frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget value) {
        if (targetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetsIsMutable();
          targets_.add(index, value);
          onChanged();
        } else {
          targetsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
       */
      public Builder addTargets(
          frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget.Builder builderForValue) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.add(builderForValue.build());
          onChanged();
        } else {
          targetsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
       */
      public Builder addTargets(
          int index, frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget.Builder builderForValue) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.add(index, builderForValue.build());
          onChanged();
        } else {
          targetsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
       */
      public Builder addAllTargets(
          java.lang.Iterable<? extends frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget> values) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, targets_);
          onChanged();
        } else {
          targetsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
       */
      public Builder clearTargets() {
        if (targetsBuilder_ == null) {
          targets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          targetsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
       */
      public Builder removeTargets(int index) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.remove(index);
          onChanged();
        } else {
          targetsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
       */
      public frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget.Builder getTargetsBuilder(
          int index) {
        return getTargetsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
       */
      public frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTargetOrBuilder getTargetsOrBuilder(
          int index) {
        if (targetsBuilder_ == null) {
          return targets_.get(index);  } else {
          return targetsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
       */
      public java.util.List<? extends frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTargetOrBuilder> 
           getTargetsOrBuilderList() {
        if (targetsBuilder_ != null) {
          return targetsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(targets_);
        }
      }
      /**
       * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
       */
      public frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget.Builder addTargetsBuilder() {
        return getTargetsFieldBuilder().addBuilder(
            frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget.getDefaultInstance());
      }
      /**
       * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
       */
      public frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget.Builder addTargetsBuilder(
          int index) {
        return getTargetsFieldBuilder().addBuilder(
            index, frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget.getDefaultInstance());
      }
      /**
       * <code>repeated .frc2020.networking.VisionTargetsUpdate.VisionTarget targets = 1;</code>
       */
      public java.util.List<frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget.Builder> 
           getTargetsBuilderList() {
        return getTargetsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget, frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget.Builder, frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTargetOrBuilder> 
          getTargetsFieldBuilder() {
        if (targetsBuilder_ == null) {
          targetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget, frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTarget.Builder, frc2020.networking.JetsonMessage.VisionTargetsUpdate.VisionTargetOrBuilder>(
                  targets_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          targets_ = null;
        }
        return targetsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:frc2020.networking.VisionTargetsUpdate)
    }

    // @@protoc_insertion_point(class_scope:frc2020.networking.VisionTargetsUpdate)
    private static final frc2020.networking.JetsonMessage.VisionTargetsUpdate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new frc2020.networking.JetsonMessage.VisionTargetsUpdate();
    }

    public static frc2020.networking.JetsonMessage.VisionTargetsUpdate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VisionTargetsUpdate>
        PARSER = new com.google.protobuf.AbstractParser<VisionTargetsUpdate>() {
      @java.lang.Override
      public VisionTargetsUpdate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VisionTargetsUpdate(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VisionTargetsUpdate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VisionTargetsUpdate> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public frc2020.networking.JetsonMessage.VisionTargetsUpdate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SLAMPoseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:frc2020.networking.SLAMPose)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float update_epoc = 1;</code>
     * @return The updateEpoc.
     */
    float getUpdateEpoc();

    /**
     * <code>float x = 2;</code>
     * @return The x.
     */
    float getX();

    /**
     * <code>float y = 3;</code>
     * @return The y.
     */
    float getY();

    /**
     * <code>float theta = 4;</code>
     * @return The theta.
     */
    float getTheta();
  }
  /**
   * Protobuf type {@code frc2020.networking.SLAMPose}
   */
  public  static final class SLAMPose extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:frc2020.networking.SLAMPose)
      SLAMPoseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SLAMPose.newBuilder() to construct.
    private SLAMPose(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SLAMPose() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SLAMPose();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SLAMPose(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              updateEpoc_ = input.readFloat();
              break;
            }
            case 21: {

              x_ = input.readFloat();
              break;
            }
            case 29: {

              y_ = input.readFloat();
              break;
            }
            case 37: {

              theta_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_SLAMPose_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_SLAMPose_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              frc2020.networking.JetsonMessage.SLAMPose.class, frc2020.networking.JetsonMessage.SLAMPose.Builder.class);
    }

    public static final int UPDATE_EPOC_FIELD_NUMBER = 1;
    private float updateEpoc_;
    /**
     * <code>float update_epoc = 1;</code>
     * @return The updateEpoc.
     */
    public float getUpdateEpoc() {
      return updateEpoc_;
    }

    public static final int X_FIELD_NUMBER = 2;
    private float x_;
    /**
     * <code>float x = 2;</code>
     * @return The x.
     */
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 3;
    private float y_;
    /**
     * <code>float y = 3;</code>
     * @return The y.
     */
    public float getY() {
      return y_;
    }

    public static final int THETA_FIELD_NUMBER = 4;
    private float theta_;
    /**
     * <code>float theta = 4;</code>
     * @return The theta.
     */
    public float getTheta() {
      return theta_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (updateEpoc_ != 0F) {
        output.writeFloat(1, updateEpoc_);
      }
      if (x_ != 0F) {
        output.writeFloat(2, x_);
      }
      if (y_ != 0F) {
        output.writeFloat(3, y_);
      }
      if (theta_ != 0F) {
        output.writeFloat(4, theta_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (updateEpoc_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, updateEpoc_);
      }
      if (x_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, x_);
      }
      if (y_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, y_);
      }
      if (theta_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, theta_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof frc2020.networking.JetsonMessage.SLAMPose)) {
        return super.equals(obj);
      }
      frc2020.networking.JetsonMessage.SLAMPose other = (frc2020.networking.JetsonMessage.SLAMPose) obj;

      if (java.lang.Float.floatToIntBits(getUpdateEpoc())
          != java.lang.Float.floatToIntBits(
              other.getUpdateEpoc())) return false;
      if (java.lang.Float.floatToIntBits(getX())
          != java.lang.Float.floatToIntBits(
              other.getX())) return false;
      if (java.lang.Float.floatToIntBits(getY())
          != java.lang.Float.floatToIntBits(
              other.getY())) return false;
      if (java.lang.Float.floatToIntBits(getTheta())
          != java.lang.Float.floatToIntBits(
              other.getTheta())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + UPDATE_EPOC_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getUpdateEpoc());
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getX());
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getY());
      hash = (37 * hash) + THETA_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getTheta());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static frc2020.networking.JetsonMessage.SLAMPose parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static frc2020.networking.JetsonMessage.SLAMPose parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static frc2020.networking.JetsonMessage.SLAMPose parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static frc2020.networking.JetsonMessage.SLAMPose parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static frc2020.networking.JetsonMessage.SLAMPose parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static frc2020.networking.JetsonMessage.SLAMPose parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static frc2020.networking.JetsonMessage.SLAMPose parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static frc2020.networking.JetsonMessage.SLAMPose parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static frc2020.networking.JetsonMessage.SLAMPose parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static frc2020.networking.JetsonMessage.SLAMPose parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static frc2020.networking.JetsonMessage.SLAMPose parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static frc2020.networking.JetsonMessage.SLAMPose parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(frc2020.networking.JetsonMessage.SLAMPose prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code frc2020.networking.SLAMPose}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:frc2020.networking.SLAMPose)
        frc2020.networking.JetsonMessage.SLAMPoseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_SLAMPose_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_SLAMPose_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                frc2020.networking.JetsonMessage.SLAMPose.class, frc2020.networking.JetsonMessage.SLAMPose.Builder.class);
      }

      // Construct using frc2020.networking.JetsonMessage.SLAMPose.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        updateEpoc_ = 0F;

        x_ = 0F;

        y_ = 0F;

        theta_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_SLAMPose_descriptor;
      }

      @java.lang.Override
      public frc2020.networking.JetsonMessage.SLAMPose getDefaultInstanceForType() {
        return frc2020.networking.JetsonMessage.SLAMPose.getDefaultInstance();
      }

      @java.lang.Override
      public frc2020.networking.JetsonMessage.SLAMPose build() {
        frc2020.networking.JetsonMessage.SLAMPose result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public frc2020.networking.JetsonMessage.SLAMPose buildPartial() {
        frc2020.networking.JetsonMessage.SLAMPose result = new frc2020.networking.JetsonMessage.SLAMPose(this);
        result.updateEpoc_ = updateEpoc_;
        result.x_ = x_;
        result.y_ = y_;
        result.theta_ = theta_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof frc2020.networking.JetsonMessage.SLAMPose) {
          return mergeFrom((frc2020.networking.JetsonMessage.SLAMPose)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(frc2020.networking.JetsonMessage.SLAMPose other) {
        if (other == frc2020.networking.JetsonMessage.SLAMPose.getDefaultInstance()) return this;
        if (other.getUpdateEpoc() != 0F) {
          setUpdateEpoc(other.getUpdateEpoc());
        }
        if (other.getX() != 0F) {
          setX(other.getX());
        }
        if (other.getY() != 0F) {
          setY(other.getY());
        }
        if (other.getTheta() != 0F) {
          setTheta(other.getTheta());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        frc2020.networking.JetsonMessage.SLAMPose parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (frc2020.networking.JetsonMessage.SLAMPose) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float updateEpoc_ ;
      /**
       * <code>float update_epoc = 1;</code>
       * @return The updateEpoc.
       */
      public float getUpdateEpoc() {
        return updateEpoc_;
      }
      /**
       * <code>float update_epoc = 1;</code>
       * @param value The updateEpoc to set.
       * @return This builder for chaining.
       */
      public Builder setUpdateEpoc(float value) {
        
        updateEpoc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float update_epoc = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUpdateEpoc() {
        
        updateEpoc_ = 0F;
        onChanged();
        return this;
      }

      private float x_ ;
      /**
       * <code>float x = 2;</code>
       * @return The x.
       */
      public float getX() {
        return x_;
      }
      /**
       * <code>float x = 2;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(float value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float x = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <code>float y = 3;</code>
       * @return The y.
       */
      public float getY() {
        return y_;
      }
      /**
       * <code>float y = 3;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(float value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float y = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        
        y_ = 0F;
        onChanged();
        return this;
      }

      private float theta_ ;
      /**
       * <code>float theta = 4;</code>
       * @return The theta.
       */
      public float getTheta() {
        return theta_;
      }
      /**
       * <code>float theta = 4;</code>
       * @param value The theta to set.
       * @return This builder for chaining.
       */
      public Builder setTheta(float value) {
        
        theta_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float theta = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTheta() {
        
        theta_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:frc2020.networking.SLAMPose)
    }

    // @@protoc_insertion_point(class_scope:frc2020.networking.SLAMPose)
    private static final frc2020.networking.JetsonMessage.SLAMPose DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new frc2020.networking.JetsonMessage.SLAMPose();
    }

    public static frc2020.networking.JetsonMessage.SLAMPose getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SLAMPose>
        PARSER = new com.google.protobuf.AbstractParser<SLAMPose>() {
      @java.lang.Override
      public SLAMPose parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SLAMPose(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SLAMPose> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SLAMPose> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public frc2020.networking.JetsonMessage.SLAMPose getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DriveSignalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:frc2020.networking.DriveSignal)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float demand_left = 1;</code>
     * @return The demandLeft.
     */
    float getDemandLeft();

    /**
     * <code>float demand_right = 2;</code>
     * @return The demandRight.
     */
    float getDemandRight();

    /**
     * <code>.frc2020.networking.DriveSignal.DemandType demand_type = 3;</code>
     * @return The enum numeric value on the wire for demandType.
     */
    int getDemandTypeValue();
    /**
     * <code>.frc2020.networking.DriveSignal.DemandType demand_type = 3;</code>
     * @return The demandType.
     */
    frc2020.networking.JetsonMessage.DriveSignal.DemandType getDemandType();
  }
  /**
   * Protobuf type {@code frc2020.networking.DriveSignal}
   */
  public  static final class DriveSignal extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:frc2020.networking.DriveSignal)
      DriveSignalOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DriveSignal.newBuilder() to construct.
    private DriveSignal(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DriveSignal() {
      demandType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DriveSignal();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DriveSignal(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              demandLeft_ = input.readFloat();
              break;
            }
            case 21: {

              demandRight_ = input.readFloat();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              demandType_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_DriveSignal_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_DriveSignal_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              frc2020.networking.JetsonMessage.DriveSignal.class, frc2020.networking.JetsonMessage.DriveSignal.Builder.class);
    }

    /**
     * Protobuf enum {@code frc2020.networking.DriveSignal.DemandType}
     */
    public enum DemandType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>OpenLoop = 0;</code>
       */
      OpenLoop(0),
      /**
       * <code>Velocity = 1;</code>
       */
      Velocity(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>OpenLoop = 0;</code>
       */
      public static final int OpenLoop_VALUE = 0;
      /**
       * <code>Velocity = 1;</code>
       */
      public static final int Velocity_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DemandType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static DemandType forNumber(int value) {
        switch (value) {
          case 0: return OpenLoop;
          case 1: return Velocity;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DemandType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          DemandType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DemandType>() {
              public DemandType findValueByNumber(int number) {
                return DemandType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return frc2020.networking.JetsonMessage.DriveSignal.getDescriptor().getEnumTypes().get(0);
      }

      private static final DemandType[] VALUES = values();

      public static DemandType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private DemandType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:frc2020.networking.DriveSignal.DemandType)
    }

    public static final int DEMAND_LEFT_FIELD_NUMBER = 1;
    private float demandLeft_;
    /**
     * <code>float demand_left = 1;</code>
     * @return The demandLeft.
     */
    public float getDemandLeft() {
      return demandLeft_;
    }

    public static final int DEMAND_RIGHT_FIELD_NUMBER = 2;
    private float demandRight_;
    /**
     * <code>float demand_right = 2;</code>
     * @return The demandRight.
     */
    public float getDemandRight() {
      return demandRight_;
    }

    public static final int DEMAND_TYPE_FIELD_NUMBER = 3;
    private int demandType_;
    /**
     * <code>.frc2020.networking.DriveSignal.DemandType demand_type = 3;</code>
     * @return The enum numeric value on the wire for demandType.
     */
    public int getDemandTypeValue() {
      return demandType_;
    }
    /**
     * <code>.frc2020.networking.DriveSignal.DemandType demand_type = 3;</code>
     * @return The demandType.
     */
    public frc2020.networking.JetsonMessage.DriveSignal.DemandType getDemandType() {
      @SuppressWarnings("deprecation")
      frc2020.networking.JetsonMessage.DriveSignal.DemandType result = frc2020.networking.JetsonMessage.DriveSignal.DemandType.valueOf(demandType_);
      return result == null ? frc2020.networking.JetsonMessage.DriveSignal.DemandType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (demandLeft_ != 0F) {
        output.writeFloat(1, demandLeft_);
      }
      if (demandRight_ != 0F) {
        output.writeFloat(2, demandRight_);
      }
      if (demandType_ != frc2020.networking.JetsonMessage.DriveSignal.DemandType.OpenLoop.getNumber()) {
        output.writeEnum(3, demandType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (demandLeft_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, demandLeft_);
      }
      if (demandRight_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, demandRight_);
      }
      if (demandType_ != frc2020.networking.JetsonMessage.DriveSignal.DemandType.OpenLoop.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, demandType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof frc2020.networking.JetsonMessage.DriveSignal)) {
        return super.equals(obj);
      }
      frc2020.networking.JetsonMessage.DriveSignal other = (frc2020.networking.JetsonMessage.DriveSignal) obj;

      if (java.lang.Float.floatToIntBits(getDemandLeft())
          != java.lang.Float.floatToIntBits(
              other.getDemandLeft())) return false;
      if (java.lang.Float.floatToIntBits(getDemandRight())
          != java.lang.Float.floatToIntBits(
              other.getDemandRight())) return false;
      if (demandType_ != other.demandType_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEMAND_LEFT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDemandLeft());
      hash = (37 * hash) + DEMAND_RIGHT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDemandRight());
      hash = (37 * hash) + DEMAND_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + demandType_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static frc2020.networking.JetsonMessage.DriveSignal parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static frc2020.networking.JetsonMessage.DriveSignal parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static frc2020.networking.JetsonMessage.DriveSignal parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static frc2020.networking.JetsonMessage.DriveSignal parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static frc2020.networking.JetsonMessage.DriveSignal parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static frc2020.networking.JetsonMessage.DriveSignal parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static frc2020.networking.JetsonMessage.DriveSignal parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static frc2020.networking.JetsonMessage.DriveSignal parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static frc2020.networking.JetsonMessage.DriveSignal parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static frc2020.networking.JetsonMessage.DriveSignal parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static frc2020.networking.JetsonMessage.DriveSignal parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static frc2020.networking.JetsonMessage.DriveSignal parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(frc2020.networking.JetsonMessage.DriveSignal prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code frc2020.networking.DriveSignal}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:frc2020.networking.DriveSignal)
        frc2020.networking.JetsonMessage.DriveSignalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_DriveSignal_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_DriveSignal_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                frc2020.networking.JetsonMessage.DriveSignal.class, frc2020.networking.JetsonMessage.DriveSignal.Builder.class);
      }

      // Construct using frc2020.networking.JetsonMessage.DriveSignal.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        demandLeft_ = 0F;

        demandRight_ = 0F;

        demandType_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return frc2020.networking.JetsonMessage.internal_static_frc2020_networking_DriveSignal_descriptor;
      }

      @java.lang.Override
      public frc2020.networking.JetsonMessage.DriveSignal getDefaultInstanceForType() {
        return frc2020.networking.JetsonMessage.DriveSignal.getDefaultInstance();
      }

      @java.lang.Override
      public frc2020.networking.JetsonMessage.DriveSignal build() {
        frc2020.networking.JetsonMessage.DriveSignal result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public frc2020.networking.JetsonMessage.DriveSignal buildPartial() {
        frc2020.networking.JetsonMessage.DriveSignal result = new frc2020.networking.JetsonMessage.DriveSignal(this);
        result.demandLeft_ = demandLeft_;
        result.demandRight_ = demandRight_;
        result.demandType_ = demandType_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof frc2020.networking.JetsonMessage.DriveSignal) {
          return mergeFrom((frc2020.networking.JetsonMessage.DriveSignal)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(frc2020.networking.JetsonMessage.DriveSignal other) {
        if (other == frc2020.networking.JetsonMessage.DriveSignal.getDefaultInstance()) return this;
        if (other.getDemandLeft() != 0F) {
          setDemandLeft(other.getDemandLeft());
        }
        if (other.getDemandRight() != 0F) {
          setDemandRight(other.getDemandRight());
        }
        if (other.demandType_ != 0) {
          setDemandTypeValue(other.getDemandTypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        frc2020.networking.JetsonMessage.DriveSignal parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (frc2020.networking.JetsonMessage.DriveSignal) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float demandLeft_ ;
      /**
       * <code>float demand_left = 1;</code>
       * @return The demandLeft.
       */
      public float getDemandLeft() {
        return demandLeft_;
      }
      /**
       * <code>float demand_left = 1;</code>
       * @param value The demandLeft to set.
       * @return This builder for chaining.
       */
      public Builder setDemandLeft(float value) {
        
        demandLeft_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float demand_left = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDemandLeft() {
        
        demandLeft_ = 0F;
        onChanged();
        return this;
      }

      private float demandRight_ ;
      /**
       * <code>float demand_right = 2;</code>
       * @return The demandRight.
       */
      public float getDemandRight() {
        return demandRight_;
      }
      /**
       * <code>float demand_right = 2;</code>
       * @param value The demandRight to set.
       * @return This builder for chaining.
       */
      public Builder setDemandRight(float value) {
        
        demandRight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float demand_right = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDemandRight() {
        
        demandRight_ = 0F;
        onChanged();
        return this;
      }

      private int demandType_ = 0;
      /**
       * <code>.frc2020.networking.DriveSignal.DemandType demand_type = 3;</code>
       * @return The enum numeric value on the wire for demandType.
       */
      public int getDemandTypeValue() {
        return demandType_;
      }
      /**
       * <code>.frc2020.networking.DriveSignal.DemandType demand_type = 3;</code>
       * @param value The enum numeric value on the wire for demandType to set.
       * @return This builder for chaining.
       */
      public Builder setDemandTypeValue(int value) {
        demandType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.frc2020.networking.DriveSignal.DemandType demand_type = 3;</code>
       * @return The demandType.
       */
      public frc2020.networking.JetsonMessage.DriveSignal.DemandType getDemandType() {
        @SuppressWarnings("deprecation")
        frc2020.networking.JetsonMessage.DriveSignal.DemandType result = frc2020.networking.JetsonMessage.DriveSignal.DemandType.valueOf(demandType_);
        return result == null ? frc2020.networking.JetsonMessage.DriveSignal.DemandType.UNRECOGNIZED : result;
      }
      /**
       * <code>.frc2020.networking.DriveSignal.DemandType demand_type = 3;</code>
       * @param value The demandType to set.
       * @return This builder for chaining.
       */
      public Builder setDemandType(frc2020.networking.JetsonMessage.DriveSignal.DemandType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        demandType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.frc2020.networking.DriveSignal.DemandType demand_type = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDemandType() {
        
        demandType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:frc2020.networking.DriveSignal)
    }

    // @@protoc_insertion_point(class_scope:frc2020.networking.DriveSignal)
    private static final frc2020.networking.JetsonMessage.DriveSignal DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new frc2020.networking.JetsonMessage.DriveSignal();
    }

    public static frc2020.networking.JetsonMessage.DriveSignal getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DriveSignal>
        PARSER = new com.google.protobuf.AbstractParser<DriveSignal>() {
      @java.lang.Override
      public DriveSignal parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DriveSignal(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DriveSignal> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DriveSignal> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public frc2020.networking.JetsonMessage.DriveSignal getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frc2020_networking_JetsonUpdate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_frc2020_networking_JetsonUpdate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frc2020_networking_VisionTargetsUpdate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_frc2020_networking_VisionTargetsUpdate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frc2020_networking_VisionTargetsUpdate_VisionTarget_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_frc2020_networking_VisionTargetsUpdate_VisionTarget_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frc2020_networking_SLAMPose_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_frc2020_networking_SLAMPose_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frc2020_networking_DriveSignal_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_frc2020_networking_DriveSignal_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024jetson_message.proto\022\022frc2020.networki" +
      "ng\"\271\001\n\014JetsonUpdate\022?\n\016target_updates\030\001 " +
      "\001(\0132\'.frc2020.networking.VisionTargetsUp" +
      "date\0221\n\013slam_update\030\002 \001(\0132\034.frc2020.netw" +
      "orking.SLAMPose\0225\n\014drive_signal\030\003 \001(\0132\037." +
      "frc2020.networking.DriveSignal\"\245\001\n\023Visio" +
      "nTargetsUpdate\022E\n\007targets\030\001 \003(\01324.frc202" +
      "0.networking.VisionTargetsUpdate.VisionT" +
      "arget\032G\n\014VisionTarget\022\022\n\nframe_epoc\030\001 \001(" +
      "\002\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002\022\r\n\005theta\030\004 \001(\002\"D" +
      "\n\010SLAMPose\022\023\n\013update_epoc\030\001 \001(\002\022\t\n\001x\030\002 \001" +
      "(\002\022\t\n\001y\030\003 \001(\002\022\r\n\005theta\030\004 \001(\002\"\243\001\n\013DriveSi" +
      "gnal\022\023\n\013demand_left\030\001 \001(\002\022\024\n\014demand_righ" +
      "t\030\002 \001(\002\022?\n\013demand_type\030\003 \001(\0162*.frc2020.n" +
      "etworking.DriveSignal.DemandType\"(\n\nDema" +
      "ndType\022\014\n\010OpenLoop\020\000\022\014\n\010Velocity\020\001b\006prot" +
      "o3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_frc2020_networking_JetsonUpdate_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_frc2020_networking_JetsonUpdate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_frc2020_networking_JetsonUpdate_descriptor,
        new java.lang.String[] { "TargetUpdates", "SlamUpdate", "DriveSignal", });
    internal_static_frc2020_networking_VisionTargetsUpdate_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_frc2020_networking_VisionTargetsUpdate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_frc2020_networking_VisionTargetsUpdate_descriptor,
        new java.lang.String[] { "Targets", });
    internal_static_frc2020_networking_VisionTargetsUpdate_VisionTarget_descriptor =
      internal_static_frc2020_networking_VisionTargetsUpdate_descriptor.getNestedTypes().get(0);
    internal_static_frc2020_networking_VisionTargetsUpdate_VisionTarget_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_frc2020_networking_VisionTargetsUpdate_VisionTarget_descriptor,
        new java.lang.String[] { "FrameEpoc", "X", "Y", "Theta", });
    internal_static_frc2020_networking_SLAMPose_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_frc2020_networking_SLAMPose_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_frc2020_networking_SLAMPose_descriptor,
        new java.lang.String[] { "UpdateEpoc", "X", "Y", "Theta", });
    internal_static_frc2020_networking_DriveSignal_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_frc2020_networking_DriveSignal_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_frc2020_networking_DriveSignal_descriptor,
        new java.lang.String[] { "DemandLeft", "DemandRight", "DemandType", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
